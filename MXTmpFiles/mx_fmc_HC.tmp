
/* FMC initialization function */
static void MX_FMC_Init(void)
{
#n#t/* USER CODE BEGIN FMC_Init 0 */
#n
#t/* USER CODE END FMC_Init 0 */
#n
#tFMC_SDRAM_TimingTypeDef SdramTiming = {0};
#n#t/* USER CODE BEGIN FMC_Init 1 */
#n
#t/* USER CODE END FMC_Init 1 */
#n
#t/** Perform the SDRAM1 memory initialization sequence#n#t*/
#thsdram1.Instance = FMC_SDRAM_DEVICE;
#t/* hsdram1.Init */
#thsdram1.Init.SDBank = FMC_SDRAM_BANK1;
#thsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
#thsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
#thsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
#thsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
#thsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
#thsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
#thsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
#thsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
#thsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
#t/* SdramTiming */
#tSdramTiming.LoadToActiveDelay = 2;
#tSdramTiming.ExitSelfRefreshDelay = 7;
#tSdramTiming.SelfRefreshTime = 4;
#tSdramTiming.RowCycleDelay = 7;
#tSdramTiming.WriteRecoveryTime = 3;
#tSdramTiming.RPDelay = 2;
#tSdramTiming.RCDDelay = 2;
#n
#tif (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
#t{
#t#tError_Handler( );
#t}
#n
#t/* USER CODE BEGIN FMC_Init 2 */
#n
#t/* USER CODE END FMC_Init 2 */
}
